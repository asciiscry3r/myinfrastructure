---
# tasks file for roles/server_config
- debug:
    var: "{{ inventory_hostname }}"

- name: Allow incoming SSH conection
  ufw:
    rule: allow
    name: OpenSSH
  when: "'local' not in inventory_hostname"
  tags:
    - firewall

- name: Enable firewall on system startup
  ufw:
    state: enabled
    logging: on
  tags:
    - firewall

- name: UFW set default policy
  shell: |
    sudo ufw default deny incoming
    sudo ufw default deny routed
  tags:
    - firewall

- name: Install Ubuntu/Debian packages and configure OS specific settings
  include: debbased.yml
  when: ansible_distribution == 'Ubuntu'

- name: Install Arch packages and configure OS specific settings
  include: archlinux.yml
  when: ansible_distribution == 'Arch Linux'

#- name: Allow and manage access on server
#  ufw:
#    rule: '{{ item.value.action }}'
#    interface: '{{ item.value.interface }}'
#    direction: '{{ item.value.direction }}'
#    proto: '{{ item.value.proto }}'
#    src: '{{ item.value.src }}'
#    from_port: '{{ item.value.from_port }}'
#    dest: '{{ item.value.dest }}'
#    to_port: '{{ item.value.to_port }}'
#  with_dict:
#    - "{{ server_allowed_access }}"
#  tags:
#    - manage_fiirewall

- name: Allow and manage access on server
  ufw:
    rule: '{{ item.action }}'
    interface: '{{ item.interface }}'
    direction: '{{ item.direction }}'
    proto: '{{ item.proto }}'
    src: '{{ item.src }}'
    from_port: '{{ item.from_port }}'
    dest: '{{ item.dest }}'
    to_port: '{{ item.to_port }}'
    route: '{{ item.route }}'
  with_items:
    - "{{ server_allowed_access }}"
  when: "server_allowed_access and server_allowed_access is not null"
  tags:
    - manage_fiirewall

- name: Set server hostname
  hostname:
    name: "{{ server_name }}"
  register: server_system_hostname

- name: Define hostname in hosts file
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: '127.0.0.1 localhost {{ server_name }}'
    owner: root
    group: root
    mode: 0644

- name: Set server time zone
  timezone:
    name: "{{ server_timezone }}"
  tags:
    - set_timezone

- name: Enable time sync with NTP servers
  shell: timedatectl set-ntp yes
  register: timedateoutput

- name: Display timedatectl output
  debug:
    var: timedateoutput

- name: Configure systemd journal log size and rotate time
  shell: |
    journalctl --vacuum-size="{{ journal_vacuum_size }}"
    journalctl --vacuum-time="{{ journal_vacuum_time }}"
  register: journactloutput

- name: Display journactl output
  debug:
    var: journactloutput

- name: Apply enforce policy to all profiles
  shell: aa-enforce /etc/apparmor.d/*
  register: apparmor_enforce_output
  tags:
    - enforce_apparmor_profiles

- name: Display aa-enforce output
  debug:
    var: apparmor_enforce_output

- name: Create securetty file
  file:
    path: /etc/securetty
    state: touch
    mode: 0644

- name: Insert/Update content in securetty file
  blockinfile:
    path: /etc/securetty
    block: "{{ server_securetty_content }}"

- name: Create logrotate configs from template
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/{{ item.name }}
    owner: root
    group: root
    mode: 0644
  with_items:
    - "{{ server_logrotate_conf }}"
  when: "server_logrotate_conf and server_logrotate_conf is not null"
  tags:
    - setup_logrotate

- name: Reboot a machine that might have lots of updates to apply
  reboot:
    reboot_timeout: 3600
  when: server_system_upgrades is changed or server_system_hostname is changed or machine_reboot_required.stat.exists
  tags:
    - reboot_machine
