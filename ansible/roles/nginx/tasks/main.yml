---
- debug:
    var: "{{ inventory_hostname }}"

- name: Print all available facts
  debug:
    var: ansible_facts
        
- name: Install Nginx | Ubuntu
  import_tasks: ubuntu.yml
  when: ansible_distribution == 'Ubuntu'
  tags:
    - Ubuntu

- name: Install Nginx | Arch
  import_tasks: archlinux.yml
  when: ansible_distribution == 'Archlinux'
  tags:
    - Arch

- name:
  user:
    name: www-data
    state: present
    shell: /usr/bin/nologin

- name: Create directory for site configs
  file:
    dest: /etc/nginx/sites-enabled
    state: directory
  tags:
    - install_nginx

- name: Create directory for site data
  file:
    dest: /var/www
    state: directory
    owner: www-data
  tags:
    - install_nginx

- name: Create main config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    force: yes
  tags:
    - install_nginx

- name: Create Letsencrypt dir
  file:
    dest: /etc/letsencrypt/live/
    state: directory
  tags:
    - configure_nginx

- name: Install default sites
  template:
    src: "{{ item }}"
    dest: /etc/nginx/sites-enabled/{{ item | basename | regex_replace('\.j2$', '') }}
    force: yes
  with_items:
    - "{{ lookup('fileglob', '{{role_path}}/templates/*.site.conf.j2', wantlist=True) }}"
  tags:
    - configure_nginx

- name: Install default sites
  template:
    src: jenkins.conf.j2
    dest: /etc/nginx/sites-enabled/jenkins.conf.j2
    force: yes
    when: install_jenkins
  tags:
    - install_jenkins
    - configure_nginx

- name: Check if main certificate already exist
  stat:
    path: /etc/letsencrypt/live/{{ server_name }}/fullchain.pem
  register: main_cert

- name: Check if repo certificate already exist
  stat:
    path: /etc/letsencrypt/live/repo.{{ server_name }}/fullchain.pem
  register: repo_cert

- name: Create ssl certificate for main
  shell: sudo certbot certonly --nginx -n -m {{ server_admin_email }} --agree-tos -d {{ server_name }}
  when: main_cert.stat.exists
  tags:
    - add_certs
    - configure_nginx

- name: Create ssl certificate for repo
  shell: sudo certbot certonly --nginx -n -m {{ server_admin_email }} --agree-tos -d repo.{{ server_name }}
  when: repo_cert.stat.exists
  tags:
    - add_certs
    - configure_nginx

- name: Create test site dir
  file:
    dest: "{{ server_root_folder }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
    mode: 0755
  tags:
    - configure_nginx

- name: Added test site code
  copy:
    src: index.html
    dest: "{{ server_root_folder }}/index.html"
    owner: www-data
    group: www-data
    mode: 0644
  tags:
    - configure_nginx

- name: Validate config
  shell: sudo killall nginx && sudo nginx -t
  notify: "restart nginx service"
  tags:
    - configure_nginx

